// Automatically generated by MockGen. DO NOT EDIT!
// Source: frizz.io/editor/client/connection (interfaces: Interface)

package mock_connection

import (
	shared "frizz.io/editor/shared"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Interface interface
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *_MockInterfaceRecorder
}

// Recorder for MockInterface (not exported)
type _MockInterfaceRecorder struct {
	mock *MockInterface
}

func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &_MockInterfaceRecorder{mock}
	return mock
}

func (_m *MockInterface) EXPECT() *_MockInterfaceRecorder {
	return _m.recorder
}

func (_m *MockInterface) Close() {
	_m.ctrl.Call(_m, "Close")
}

func (_mr *_MockInterfaceRecorder) Close() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Close")
}

func (_m *MockInterface) Go(_param0 shared.Method, _param1 interface{}, _param2 interface{}, _param3 chan error) chan error {
	ret := _m.ctrl.Call(_m, "Go", _param0, _param1, _param2, _param3)
	ret0, _ := ret[0].(chan error)
	return ret0
}

func (_mr *_MockInterfaceRecorder) Go(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Go", arg0, arg1, arg2, arg3)
}
